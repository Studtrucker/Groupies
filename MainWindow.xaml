<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Groupies"
        xmlns:uc="clr-namespace:Groupies.UserControls" 
        xmlns:cmd="clr-namespace:Groupies.Commands"
        xmlns:converters="clr-namespace:Groupies.Converters"
        xmlns:ViewModels="clr-namespace:Groupies.ViewModels"
        xmlns:behaviors="clr-namespace:Groupies.Behaviors"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        d:DataContext="{d:DesignInstance Type=ViewModels:MainViewModel}"
        mc:Ignorable="d"
        WindowState="Maximized" Icon="{Binding WindowTitleIcon}" Title="{Binding WindowTitleText}" Height="450" Width="800">

    <Window.Resources>
        <Style x:Key="DataGridRowAlwaysSelectedStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <!-- zeigt die Auswahlfarbe auch wenn das DataGrid nicht fokussiert ist -->
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <local:CancelClosingTriggerAction Command="{Binding WindowClosingCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding WindowClosedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <DockPanel >
        
        <!--Menus-->
        <Menu DockPanel.Dock="Top" BorderThickness="1" BorderBrush="Yellow" Background="LightGray">

            <MenuItem  Header="_Datei">
                <MenuItem Header="_Neuer Club" Command="{Binding ClubNewCommand}">
                    <MenuItem.Icon>
                        <Image Source="Images/neueGruppe-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Club ö_ffnen" Command="{Binding ClubOpenCommand}">
                    <MenuItem.Icon>
                        <Image Source="Images/GruppeOeffnen-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Club _speichern" Command="{Binding ClubSaveCommand}">
                    <MenuItem.Icon>
                        <Image Source="Images/speichern-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Club speichern _unter..." Command="{Binding ClubSaveAsCommand}"/>
                <Separator/>
                <MenuItem  Header="Teilnehmerinfo _drucken..." Command="{Binding ClubInfoPrintCommand}" CommandParameter="{x:Static ViewModels:Printversion.TeilnehmerInfo}">
                    <MenuItem.Icon>
                        <Image Height="20" Source="Images/drucken-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Trainerinfo _drucken..." Command="{Binding ClubInfoPrintCommand}"  CommandParameter="{x:Static ViewModels:Printversion.TrainerInfo}"/>
                <Separator/>
                <MenuItem Header="Zuletzt verwendet"  x:Name="MostRecentlyUsedMenuItem" ItemsSource="{Binding MostRecentlyUsedMenuItem}" >
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Titel}"/>
                            <Setter Property="Command" Value="{Binding Befehl}"/>
                            <Setter Property="CommandParameter" Value="{Binding Titel}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Club schliesse_n" Command="{Binding ClubCloseCommand}"/>

                <Separator/>
                <MenuItem Header="_Beenden" Command="{Binding ApplicationCloseCommand}" />
            </MenuItem>


            <MenuItem Header="_Organisation">
                <MenuItem Header="Einteilungen">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-diversity-48.png"/>
                    </MenuItem.Icon>
                    <MenuItem Header="Übersicht"  Command="{Binding EinteilungsuebersichtAnzeigenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-uebersichtsliste-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Erstellen" Command="{Binding EinteilungErstellenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-create-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Gruppen">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-konferenz-vordergrund-ausgewaehlte-48.png"/>
                    </MenuItem.Icon>
                    <MenuItem Header="Übersicht"  Command="{Binding GruppenuebersichtAnzeigenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-uebersichtsliste-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Erstellen"  Command="{Binding GruppeErstellenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-create-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Leistungsstufen">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-treppe-rauf-48.png"/>
                    </MenuItem.Icon>
                    <MenuItem Header="Übersicht"  Command="{Binding LeistungsstufenuebersichtAnzeigenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-uebersichtsliste-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Erstellen" Command="{Binding LeistungsstufeErstellenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-create-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Fähigkeiten">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-trophaee-48.png"/>
                    </MenuItem.Icon>
                    <MenuItem Header="Übersicht"  Command="{Binding FaehigkeitenuebersichtAnzeigenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-uebersichtsliste-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Erstellen" Command="{Binding FaehigkeitErstellenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-create-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_Personen" >
                <MenuItem Header="Teilnehmer">
                    <MenuItem Header="Übersicht"  Command="{Binding TeilnehmeruebersichtAnzeigenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-uebersichtsliste-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Erstellen" Command="{Binding TeilnehmerErstellenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-create-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem.Icon>
                        <Image Height="20" Source="Images/icons8-person-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Trainer">
                    <MenuItem Header="Übersicht"  Command="{Binding TraineruebersichtAnzeigenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-uebersichtsliste-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Erstellen" Command="{Binding TrainerErstellenCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Images/icons8-create-48.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem.Icon>
                        <Image Height="20" Source="Images/icons8-trainer-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem  Header="_Extras" >
                <MenuItem Header="Daten aus Excel importieren">
                    <MenuItem.Icon>
                        <Image Height="20" Source="Images/icons8-person-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Daten nach Excel exportieren">
                    <MenuItem.Icon>
                        <Image Height="20" Source="Images/icons8-microsoft-excel-2019-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Hilfe">
                <MenuItem Header="Alle von Icons8" Command="{Binding OpenHomepageCommand}" >
                    <!--Für das Viewitem siehe WhatsApp ChatGPT vom 15.05.2025-->
                </MenuItem>
            </MenuItem>

        </Menu>


        <Grid x:Name="Desktop">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                <ColumnDefinition Width="15*" SharedSizeGroup="GroupExplorerColumn" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="GridSplitterColumn" />
                <ColumnDefinition Width="5*"  SharedSizeGroup="GroupViewerColumn" />
                <ColumnDefinition Width="13*"/>
                <ColumnDefinition Width="27*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="GridSplitterColumn" />
                <ColumnDefinition Width="15*" SharedSizeGroup="PersonExplorerColumn" />
                <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                <RowDefinition />
                <RowDefinition Style="{StaticResource RandRowDefinition}"/>
            </Grid.RowDefinitions>

            <Grid x:Name="GridSpalte1" Grid.Column="1" Grid.Row="1" Margin="0,0,0,20" Grid.RowSpan="2" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>

                <DockPanel Grid.Row="0">
                    <TextBlock Text="Die Einteilungen" DockPanel.Dock="Top"/>

                    <DataGrid x:Name="EinteilungenDataGrid" DockPanel.Dock="Bottom" 
                                  AutoGenerateColumns="False" 
                                  ItemsSource="{Binding AlleEinteilungenCV}"
                                  SelectedItem="{Binding SelectedEinteilung}"
                                  DisplayMemberPath="Benennung"
                                  IsReadOnly="True" CanUserAddRows="False" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Nr"  Binding="{Binding Sortierung, UpdateSourceTrigger=PropertyChanged}" Width="Auto" />
                            <DataGridTextColumn Header="Benennung"  Binding="{Binding Benennung, UpdateSourceTrigger=PropertyChanged}" Width="*" />
                        </DataGrid.Columns>
      

                    </DataGrid>
                </DockPanel>

                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch"  Height="5" 
                              VerticalAlignment="Center"  Background="WhiteSmoke"/>

                <DockPanel Grid.Row="2">
                    <TextBlock Text="Die Gruppen" DockPanel.Dock="Top"/>

                    <DataGrid x:Name="GruppenlisteDataGrid" 
                              ItemsSource="{Binding  SelectedEinteilung.Gruppenliste}"  
                              SelectedItem="{Binding SelectedGruppe}"                             
                              DisplayMemberPath="Benennung" 
                              IsReadOnly="True" DockPanel.Dock="Bottom"
                              Margin="6"  Foreground="Black" 
                              AutoGenerateColumns="False" SelectionMode="Single">

                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Gruppe entfernen" 
                                          Command="{Binding PlacementTarget.DataContext.GruppeAusEinteilungEntfernenCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding PlacementTarget.DataContext.SelectedGruppe, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                <MenuItem Header="Transfer to" ItemsSource="{Binding AlleEinteilungenCV}">
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <!-- Überschrift aus der Bound-Einteilung -->
                                            <Setter Property="Header" Value="{Binding Benennung}"/>
                                            <!-- Command im MainViewModel ausführen, Parameter ist die Einteilung selbst -->
                                            <Setter Property="Command" Value="{Binding DataContext.TransferToEinteilungCommand, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                            <Setter Property="CommandParameter" Value="{Binding}"/>
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                </MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>

                        <DataGrid.Columns>
                            <!--<DataGridTemplateColumn Header="Gruppen" Width="*" CellTemplate="{StaticResource GruppenlisteDataTemplate1}"/>-->
                            <DataGridTextColumn Header="Nr"  Binding="{Binding Sortierung}" Width="Auto" />
                            <DataGridTextColumn Header="Benennung"  Binding="{Binding Benennung}" Width="Auto" />
                            <DataGridTextColumn Header="Anz"  Binding="{Binding Mitgliederliste.Count}" SortMemberPath="Mitgliederliste.Count" Width="Auto" />
                            <DataGridTextColumn Header="StufeNr"  Binding="{Binding Leistungsstufe.Sortierung}" SortMemberPath="Leistungsstufe.Sortierung" Width="Auto" />
                            <DataGridTextColumn Header="Stufe"      
                                                Binding="{Binding Leistungsstufe.Benennung}" SortMemberPath="Leistungsstufe.Benennung" Width="*" />
                            <!--<DataGridComboBoxColumn Header="Stufe" Width="*" 
                                                    ItemsSource="{Binding DataContext.LeistungsstufenListe}"                                                   
                                                    DisplayMemberPath="Benennung"
                                                    SelectedValuePath="Ident"
                                                    SelectedValueBinding="{Binding LeistungsstufeID, Mode=TwoWay}"/>-->
                        </DataGrid.Columns>
                    </DataGrid>

                </DockPanel>

            </Grid>

            <GridSplitter x:Name="GridSplitterSpalte2" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Center" 
                          Width="5" Background="WhiteSmoke" Margin="0,0,0,20" Grid.RowSpan="2"/>

            <DockPanel x:Name="DockPanelSpalte3"  Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="3" Margin="0,0,0,20" Grid.RowSpan="2">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <TextBlock Text="Gruppe" />
                        <uc:GruppendetailUserControl x:Name="GruppeUserControl" DataContext="{Binding GruppendetailViewModel}"/>
                    </StackPanel>
                </ScrollViewer>
            </DockPanel>

            <GridSplitter x:Name="GridSplitterSpalte4" Grid.Column="6" Grid.Row="1" HorizontalAlignment="Center" 
                          Width="5" Background="WhiteSmoke" Margin="0,0,0,20" Grid.RowSpan="2"/>

            <Grid x:Name="GridSpalte5" Grid.Column="7" Grid.Row="1" Margin="0,0,0,20" Grid.RowSpan="2" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>

                <DockPanel Grid.Row="0">
                    <TextBlock Text="Gruppenlose Skilehrer" DockPanel.Dock="Top"/>
                    <DataGrid x:Name="GruppenloseTrainerDataGrid" DockPanel.Dock="Top"
                              ItemsSource="{Binding SelectedEinteilung.VerfuegbareTrainerListe}"
                              behaviors:DataGridMultiSelect.BindableSelectedItems="{Binding DataContext.SelectedAlleGruppenloserTrainer, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"
                              AutoGenerateColumns="False" SelectionUnit="FullRow"
                              IsReadOnly="True" CanUserAddRows="False" SelectionMode="Extended">
                        <!--                              SelectedItem="{Binding SelectedGruppenloserTrainer}"-->

                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Trainer einteilen"  
                                          Command="{Binding TrainerInGruppeEinteilenCommand}"
                                          CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                <MenuItem Header="Trainer entfernen"  
                                          Command="{Binding TrainerAusEinteilungEntfernenCommand}"
                                          CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>

                        <i:Interaction.Behaviors>
                            <behaviors:DataGridRowDoubleClickBehavior 
                                Command="{Binding Path=DataContext.TrainerInGruppeEinteilenCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                CommandParameter="{Binding SelectedAlleGruppenloserTreiner, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </i:Interaction.Behaviors>

                       
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Foto}" Height="35" Width="35"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Name" Binding="{Binding VorNachname}" Width="*"/>
                        </DataGrid.Columns>

                    </DataGrid>

                </DockPanel>

                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch"  Height="5" 
                              VerticalAlignment="Center"  Background="WhiteSmoke"/>

                <DockPanel Grid.Row="2">
                    <TextBlock Text="Gruppenlose Teilnehmer" DockPanel.Dock="Top"/>
                    <DataGrid x:Name="GruppenloseTeilnehmerDataGrid" DockPanel.Dock="Top" 
                              ItemsSource="{Binding SelectedEinteilung.NichtZugewieseneTeilnehmerListe}"
                              IsSynchronizedWithCurrentItem="True"
                              AutoGenerateColumns="False"
                              behaviors:DataGridMultiSelect.BindableSelectedItems="{Binding DataContext.SelectedNichtZugewiesenerTeilnehmerListe, RelativeSource={RelativeSource AncestorType=Window}}"
                              SelectionMode="Extended"   IsReadOnly="True">
                              <!---->
                        <i:Interaction.Behaviors>
                            <behaviors:DataGridRowDoubleClickBehavior 
                            Command="{Binding Path=DataContext.TeilnehmerInGruppeEinteilenCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            CommandParameter="{Binding SelectedAlleMitglieder, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </i:Interaction.Behaviors>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Vorname" Binding="{Binding Vorname,UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding Nachname,UpdateSourceTrigger=PropertyChanged}"/>
                            <!--<DataGridTextColumn Header="Alter" Binding="{Binding Alter, Mode=OneWay}"/>-->
                            <DataGridTextColumn Header="StufeNr"  Binding="{Binding Leistungsstufe.Sortierung}" Width="Auto" />
                            <DataGridTextColumn Header="Stufe"  Binding="{Binding Leistungsstufe.Benennung}" Width="*" />

                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Teilnehmer einteilen"  
                                          Command="{Binding TeilnehmerInGruppeEinteilenCommand}"
                                          CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                <MenuItem Header="Teilnehmer entfernen"    
                                          Command="{Binding TeilnehmerAusEinteilungEntfernenCommand}"
                                          CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                <Separator/>
                                <MenuItem Header="Teilnehmer suchen"    
                                          Command="{Binding TeilnehmerSuchenCommand}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>

                </DockPanel>

            </Grid>

        </Grid>
    </DockPanel>

</Window>

