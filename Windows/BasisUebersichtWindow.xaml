<Window x:Class="BasisUebersichtWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Groupies"
        mc:Ignorable="d"
        xmlns:convert="clr-namespace:Groupies.Converters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        Title="{Binding WindowTitleText}" Icon="{Binding WindowTitleIcon}"
        Width="1350" Height="750" >
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding UserControlLoaded}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Window.Resources>
        <convert:InvertableBoolToVisibleConverter Inverted="True" x:Key="BooleanToVisibilityInverted"/>
        <!-- Todo: Kann Converter weg? -->
        <convert:StringToLeistungsstufeConverter x:Key="StringToLeistungsstufeConverter"/>

        <!--Data Template Trainer-->
        <DataTemplate DataType="{x:Type local:TrainerViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>


                <!--Objektliste-->
                <DataGrid Grid.Column="0" CanUserAddRows="False" CanUserSortColumns="True"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}" 
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">
 
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                     <DataGrid.Columns >
                        <DataGridTextColumn Header="Spitzname" Binding="{Binding Spitzname}" SortMemberPath="Spitzname" Width="Auto"/>
                        <DataGridTextColumn Header="Vorname" Binding="{Binding Vorname}" SortMemberPath="Vorname" Width="Auto"/>
                        <DataGridTextColumn Header="Nachname" Binding="{Binding Nachname}" SortMemberPath="Nachname" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
                
                <!-- Detailansicht-->
                <Grid  Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="500"/>
                    <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                </Grid.RowDefinitions>

                <Border AllowDrop="True" Width="120" Height="180" Grid.Row="1" Grid.Column="1" Grid.RowSpan="4" 
                    VerticalAlignment="Top" Margin="2"  
                    BorderBrush="Black" BorderThickness="1">
                    <i:Interaction.Behaviors>
                        <local:DragDropBehavior 
                            DragOverCommand="{Binding DragOverCommand}" 
                            DropCommand="{Binding DropCommand}" />
                    </i:Interaction.Behaviors>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="6*"/>
                            <RowDefinition Height="4*"/>
                        </Grid.RowDefinitions>
                        <Rectangle Fill="Transparent"/>
                        <Image VerticalAlignment="Center" Source="/Images/icons8-trainer-96.png" 
                           Visibility="{Binding SelectedItem.HatFoto,Converter={StaticResource BooleanToVisibilityInverted}}"
                           Grid.Row="0"/>
                        <TextBlock TextAlignment="Center" Foreground="Black"  HorizontalAlignment="Center" VerticalAlignment="Center"  
                               Grid.Row="1"
                               Visibility="{Binding SelectedItem.HatFoto,Converter={StaticResource BooleanToVisibilityInverted}}">Bild per
							<LineBreak/> Drag'n'Drop<LineBreak/>setzen
                        </TextBlock>
                            <Image x:Name="FotoImage" Width="120" Height="180" Source="{Binding SelectedItem.Foto}" Grid.RowSpan="2" />
                    </Grid>

                </Border>

                <Label Content="Trainer ID" Grid.Column="2" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                    <!--<TextBlock>Trainer ID
				<Run Foreground="Red">*</Run>
            </TextBlock>-->
                </Label>
                <TextBox x:Name="TrainerIDTextBox" Grid.Column="3" Grid.Row="1" IsReadOnly="True" 
                 Text="{Binding SelectedItem.TrainerID,UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />


                <Label Grid.Column="2" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                    <TextBlock>Spitzname
                <Run Foreground="Red">*</Run>
                    </TextBlock>
                </Label>
                <TextBox x:Name="SpitznameTextBox" Grid.Column="3" Grid.Row="2"           
            Text="{Binding SelectedItem.Spitzname, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>

                <Label Grid.Column="2" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                    <TextBlock>Vorname
                    <Run Foreground="Red">*</Run>
                    </TextBlock>
                </Label>
                <TextBox Grid.Column="3" Grid.Row="3"
                 x:Name="VornameTextbox"
                 Text="{Binding SelectedItem.Vorname, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"   />

                <Label Content="Nachname" Grid.Column="2" Grid.Row="4"/>
                <TextBox Grid.Column="3" Grid.Row="4"
                     x:Name="NachnameTextbox"
                     Text="{Binding SelectedItem.Nachname,  UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />

                <Label Content="Telefon" Grid.Column="2" Grid.Row="5"/>
                <TextBox Grid.Column="3" Grid.Row="5"
                     x:Name="TelefonTextbox"
                     Text="{Binding SelectedItem.Telefonnummer, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />

                <Label Content="e-Mail" Grid.Column="2" Grid.Row="6"/>
                <TextBox Grid.Column="3" Grid.Row="6"
                     x:Name="eMailTextbox"
                     Text="{Binding SelectedItem.EMail, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />
            </Grid>
            </Grid>

        </DataTemplate>

        <!--Data Template Teilnehmer-->
        <DataTemplate DataType="{x:Type local:TeilnehmerViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Objektliste-->
                    <DataGrid Grid.Row="0" CanUserAddRows="False" CanUserDeleteRows="False"
                              AutoGenerateColumns="False"
                              IsSynchronizedWithCurrentItem="True"
                              ItemsSource="{Binding ItemsView}"
                              SelectedItem="{Binding SelectedItem}"                           
                              local:DataGridScrollBehavior.AutoScrollIntoView="True">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Sorting">
                                <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <DataGrid.Columns >
                            <DataGridTextColumn Header="Vorname" Binding="{Binding Vorname}" Width="Auto" SortMemberPath="Vorname"/>
                            <DataGridTextColumn Header="Nachname" Binding="{Binding Nachname}" Width="Auto" SortMemberPath="Nachname"/>
                            <DataGridTextColumn Header="Alter" Binding="{Binding Alter}" Width="Auto" SortMemberPath="Alter"/>
                            <DataGridTextColumn Header="Leistungsstand" Binding="{Binding Leistungsstand}"  Width="*" SortMemberPath="Leistungsstand.Sortierung"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBlock Grid.Row="1" Text="{Binding AktuelleAnzahlObjekte}" />
                </Grid>

                <!-- Detailansicht-->
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition x:Name="CaptionColumn" Width="Auto"/>
                        <ColumnDefinition Width="500"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Teilnehmer ID</TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Vorname <Run Foreground="Red">*</Run></TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Nachname <Run Foreground="Red">*</Run></TextBlock>
                    </Label>
                    <Label Content="Geburtsdatum" Grid.Column="1" Grid.Row="4"/>
                    <Label Content="Telefon" Grid.Column="1" Grid.Row="5"/>
                    <Label Grid.Column="1" Grid.Row="6" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Leistungsstand <Run Foreground="Red">*</Run></TextBlock>
                    </Label>

                    <TextBox x:Name="TeilnehmerIDTextBox" Grid.Column="2" Grid.Row="1" IsReadOnly="True" 
                             Text="{Binding SelectedItem.TeilnehmerID, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                    <TextBox x:Name="VornameTextBox" Grid.Column="2" Grid.Row="2" 
                             Text="{Binding SelectedItem.Vorname, UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=True}"/>
                    <TextBox x:Name="NachnameTextBox" Grid.Column="2" Grid.Row="3"
                             Text="{Binding SelectedItem.Nachname, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                    
                    <DatePicker x:Name="GeburtstagDatePicker" Grid.Row="4" Grid.Column="2" Width="200" HorizontalAlignment="Left"
                                SelectedDate="{Binding SelectedItem.Geburtsdatum, UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=True}"/>
                    
                    <TextBox x:Name="TelefonTextBox" Grid.Column="2" Grid.Row="5"
                             Text="{Binding SelectedItem.Telefonnummer, UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=True}"/>

                    <ComboBox Grid.Column="2" Grid.Row="6" IsSynchronizedWithCurrentItem="True"
                              x:Name="LeistungsstandComboBox"
                              DisplayMemberPath="Benennung"
                              ItemsSource="{Binding LeistungsstufenListCollectionView}"
                              SelectedValue="{Binding SelectedItem.Leistungsstand}"/>
                    <!--SelectedValue="{Binding SelectedItem.Leistungsstand, Converter={StaticResource StringToLeistungsstufeConverter}}"-->
                </Grid>
            </Grid>

        </DataTemplate>
        
        <!--Data Template Gruppe-->
        <DataTemplate DataType="{x:Type local:GruppeViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <!--Objektliste-->
                <DataGrid Grid.Column="0" CanUserAddRows="False" CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung" Width="Auto"/>
                        <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="AusgabeTeilnehmerinfo" Width="Auto"/>
                        <DataGridTextColumn Header="Leistungsstufe" Binding="{Binding Leistungsstufe.Benennung}" SortMemberPath="Leistungsstufe.Sortierung" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Detailansicht-->

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="500"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="200"/>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                    </Grid.RowDefinitions>

                    <!--Labels-->
                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Gruppen ID
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Benennung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="4" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Sortierer
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="5" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Leistungsstufe
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <!--Felder-->
                    <TextBox Text="{Binding SelectedItem.GruppenID, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             x:Name="GruppenIDTextBox" Grid.Column="2" Grid.Row="1"/>

                    <TextBox Text="{Binding SelectedItem.Benennung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                             x:Name="BenennungTextBox" Grid.Column="2" Grid.Row="3" />

                    <TextBox Text="{Binding SelectedItem.Sortierung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             x:Name="SortierungTextBox" Grid.Column="2" Grid.Row="4"/>

                    <ComboBox Grid.Column="2" Grid.Row="5" IsSynchronizedWithCurrentItem="True"
                              x:Name="LeistungsstufeCombobox"
                              ItemsSource="{Binding LeistungsstufenListCollectionView}"/>
                  <!--SelectedValue="{Binding SelectedItem.Leistungsstufe, UpdateSourceTrigger=PropertyChanged,
                    ValidatesOnNotifyDataErrors=True, Converter={StaticResource StringToLeistungsstufeConverter}}"-->
                </Grid>
            </Grid>
        </DataTemplate>

        <!--Data Template Einteilung-->
        <DataTemplate DataType="{x:Type local:EinteilungViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                               
                <!--Objektliste-->
                <DataGrid Grid.Column="0" CanUserAddRows="False" CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung" Width="Auto"/>
                        <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="Benennung" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Detailansicht-->

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="500"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="200"/>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                    </Grid.RowDefinitions>

                    <!--Labels-->
                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Einteilung ID
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Sortierung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Benennung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                       <!--Felder-->
                    <TextBox Text="{Binding SelectedItem.EinteilungID, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Grid.Column="2" Grid.Row="1"/>
                    <TextBox Text="{Binding SelectedItem.Sortierung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Grid.Column="2" Grid.Row="2"/>
                    <TextBox Text="{Binding SelectedItem.Benennung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Grid.Column="2" Grid.Row="3"/>

                </Grid>
            </Grid>
        </DataTemplate>

        <!--Data Template Leistungsstufe-->
        <DataTemplate DataType="{x:Type local:LeistungsstufeViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                

                <!--Objektliste-->
                <DataGrid Grid.Column="0" CanUserAddRows="False" CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung" Width="Auto"/>
                        <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="Benennung" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Detailansicht-->
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="500"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="100"/>
                        <RowDefinition Height="250"/>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                    </Grid.RowDefinitions>

                    <!--Labels-->
                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Sortierung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Benennung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Beschreibung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="4" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Fähigkeiten
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <!--Felder-->
                    <TextBox Text="{Binding SelectedItem.Sortierung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Grid.Column="2" Grid.Row="1"/>
                    <TextBox Text="{Binding SelectedItem.Benennung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Grid.Column="2" Grid.Row="2"/>

                    <TextBox Text="{Binding SelectedItem.Beschreibung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     Grid.Column="2" Grid.Row="3" />

                    <TextBox Text="{Binding SelectedItem.Faehigkeiten, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Grid.Column="2" Grid.Row="4"/>

                </Grid>
            </Grid>
        </DataTemplate>

        <!--Data Template Faehigkeit-->
        <DataTemplate DataType="{x:Type local:FaehigkeitViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <!--Objektliste-->
                <DataGrid Grid.Column="0" CanUserAddRows="False" CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung" Width="Auto"/>
                        <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="Benennung" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Detailansicht-->

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="500"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="200"/>
                        <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                    </Grid.RowDefinitions>

                    <!--Labels-->
                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Sortierung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Benennung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Beschreibung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <!--Felder-->
                    <TextBox Text="{Binding SelectedItem.Sortierung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Grid.Column="2" Grid.Row="1"/>
                    <TextBox Text="{Binding SelectedItem.Benennung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Grid.Column="2" Grid.Row="2"/>

                    <TextBox Text="{Binding SelectedItem.Beschreibung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                    Grid.Column="2" Grid.Row="3" />

                </Grid>
            </Grid>
        </DataTemplate>

    </Window.Resources>
    
    <DockPanel>
        <!--Menuleiste-->
        <Menu DockPanel.Dock="Top" BorderThickness="1" BorderBrush="LightSlateGray">

            <MenuItem  Header="Aktionen">
                <MenuItem Header="Ansehen" Command="{Binding AnsehenCommand}" >
                    <MenuItem.Icon>
                        <Image Source= "pack://application:,,,/Images/icons8-view-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Neu"  Command="{Binding NeuCommand}">
                    <MenuItem.Icon>
                        <Image Source= "pack://application:,,,/Images/icons8-create-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Bearbeiten"  Command="{Binding BearbeitenCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-pencil-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Löschen"  Command="{Binding LoeschenCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-remove-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Schliessen" Command="{Binding CloseCommand}" />
            </MenuItem>

        </Menu>
        
        
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition  Style="{StaticResource RandRowDefinition}"/>
                <RowDefinition Height="*"/>
                <RowDefinition Style="{StaticResource RandRowDefinition}"/>
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="1" Grid.Row="1">
                
                <!--Buttons-->
                <Border DockPanel.Dock="Bottom">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Label x:Name="FehlerInfoLabel" Content="{Binding (Validation.ValidationAdornerSiteFor).(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Mode=Self}}" />
                        <Button x:Name="ZurueckButton" Width="35" Command="{Binding AktuellesViewModel.MovePreviousCommand}" >
                            <Image Source="/Images/icons8-back-48.png"/>
                        </Button>
                        <Button x:Name="VorButton" Width="35" Command="{Binding AktuellesViewModel.MoveNextCommand}" >
                            <Image Source="/Images/icons8-next-48.png"/>
                        </Button>
                        <Button x:Name="CloseButton" Width="110" Content="Schliessen"  Command="{Binding CloseCommand}" Visibility="{Binding CloseButtonVisibility}"/>
                    </StackPanel>
                </Border>

                <!--Überschrift-->
                <DockPanel DockPanel.Dock="Top">
                    <Image Source="{Binding WindowHeaderImage}"
                   Style="{StaticResource WindowImageCaption}" />
                    <TextBlock Text="{Binding WindowHeaderText}"
                       Style="{StaticResource WindowCaption}" />
                </DockPanel>

                <!--Liste und Detailfeld-->
                <ContentControl Content="{Binding AktuellesViewModel}" Width="Auto"/>
                
            </DockPanel>
        </Grid>
        
    </DockPanel>
</Window>
