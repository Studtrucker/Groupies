<Window x:Class="BasisUebersichtWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Groupies"
        mc:Ignorable="d"
        xmlns:convert="clr-namespace:Groupies.Converters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        Title="{Binding WindowTitleText}" Icon="{Binding WindowTitleIcon}"
        Width="800" Height="450" >
    <!--SizeToContent="WidthAndHeight"-->
    <Window.Resources>
        <convert:InvertableBoolToVisibleConverter Inverted="True" x:Key="BooleanToVisibilityInverted"/>

        <!--Data Template Trainer-->
        <DataTemplate DataType="{x:Type local:TrainerViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                
                <!--Objektliste-->
                <DataGrid Grid.Column="0"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding Items}"
                          SelectedItem="{Binding SelectedItem}"
                          DisplayMemberPath="Spitzname">
                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Spitzname" Binding="{Binding Spitzname}" Width="*"/>
                        <DataGridTextColumn Header="Vorname" Binding="{Binding Vorname}" Width="*"/>
                        <DataGridTextColumn Header="Nachname" Binding="{Binding Nachname}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
                
                <!-- Detailansicht-->
                <Grid  Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="500"/>
                    <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Style="{StaticResource RandRowDefinition}"/>
                </Grid.RowDefinitions>

                <Border AllowDrop="True" Width="120" Height="180" Grid.Row="1" Grid.Column="1" Grid.RowSpan="4" 
                    VerticalAlignment="Top" Margin="2"  
                    BorderBrush="Black" BorderThickness="1">
                    <i:Interaction.Behaviors>
                        <local:DragDropBehavior 
                            DragOverCommand="{Binding DragOverCommand}" 
                            DropCommand="{Binding DropCommand}" />
                    </i:Interaction.Behaviors>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="6*"/>
                            <RowDefinition Height="4*"/>
                        </Grid.RowDefinitions>
                        <Rectangle Fill="Transparent"/>
                        <Image VerticalAlignment="Center" Source="/Images/icons8-trainer-96.png" 
                           Visibility="{Binding Path=HasPicture,Converter={StaticResource BooleanToVisibilityInverted}}"
                           Grid.Row="0"/>
                        <TextBlock TextAlignment="Center" Foreground="Black"  HorizontalAlignment="Center" VerticalAlignment="Center"  
                               Grid.Row="1"
                               Visibility="{Binding Path=HasPicture,Converter={StaticResource BooleanToVisibilityInverted}}">Bild per
							<LineBreak/> Drag'n'Drop<LineBreak/>setzen
                        </TextBlock>
                            <Image x:Name="FotoImage" Width="96" Height="96" Source="{Binding SelectedItem.Foto}" />
                    </Grid>

                </Border>

                <Label Content="Trainer ID" Grid.Column="2" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                    <!--<TextBlock>Trainer ID
				<Run Foreground="Red">*</Run>
            </TextBlock>-->
                </Label>
                <TextBox x:Name="TrainerIDTextBox" Grid.Column="3" Grid.Row="1" IsReadOnly="True" 
                 Text="{Binding SelectedItem.TrainerID,UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />


                <Label Grid.Column="2" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                    <TextBlock>Spitzname
                <Run Foreground="Red">*</Run>
                    </TextBlock>
                </Label>
                <TextBox x:Name="SpitznameTextBox" Grid.Column="3" Grid.Row="2"           
            Text="{Binding SelectedItem.Spitzname, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>

                <Label Grid.Column="2" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                    <TextBlock>Vorname
                    <Run Foreground="Red">*</Run>
                    </TextBlock>
                </Label>
                <TextBox Grid.Column="3" Grid.Row="3"
                 x:Name="VornameTextbox"
                 Text="{Binding SelectedItem.Vorname, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"   />

                <Label Content="Nachname" Grid.Column="2" Grid.Row="4"/>
                <TextBox Grid.Column="3" Grid.Row="4"
                     x:Name="NachnameTextbox"
                     Text="{Binding SelectedItem.Nachname,  UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />

                <Label Content="Telefon" Grid.Column="2" Grid.Row="5"/>
                <TextBox Grid.Column="3" Grid.Row="5"
                     x:Name="TelefonTextbox"
                     Text="{Binding SelectedItem.Telefonnummer, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />

                <Label Content="e-Mail" Grid.Column="2" Grid.Row="6"/>
                <TextBox Grid.Column="3" Grid.Row="6"
                     x:Name="eMailTextbox"
                     Text="{Binding SelectedItem.EMail, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />
            </Grid>
            </Grid>

        </DataTemplate>
        
        <!--Data Template Gruppe-->
        <DataTemplate DataType="{x:Type local:GruppeViewModel}">

        </DataTemplate>
    </Window.Resources>
    
    <DockPanel>
        <!--Menuleiste-->
        <Menu DockPanel.Dock="Top" BorderThickness="1" BorderBrush="LightSlateGray">

            <MenuItem  Header="Aktionen">
                <MenuItem Header="Ansehen" Command="{Binding AnsehenCommand}" >
                    <MenuItem.Icon>
                        <Image Source= "pack://application:,,,/Images/icons8-view-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Neu"  Command="{Binding NeuCommand}">
                    <MenuItem.Icon>
                        <Image Source= "pack://application:,,,/Images/icons8-create-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Bearbeiten"  Command="{Binding BearbeitenCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-pencil-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Löschen"  Command="{Binding LoeschenCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-remove-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Schliessen" Command="{Binding CloseCommand}" />
            </MenuItem>

        </Menu>
        
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition  Style="{StaticResource RandRowDefinition}"/>
                <RowDefinition Height="*"/>
                <RowDefinition Style="{StaticResource RandRowDefinition}"/>
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="1" Grid.Row="1">
                
                <!--Schliessen-Button-->
                <Border DockPanel.Dock="Bottom">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Label x:Name="FehlerInfoLabel" Content="{Binding (Validation.ValidationAdornerSiteFor).(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Mode=Self}}" />
                        <Button x:Name="ZurueckButton" Width="35" Command="{Binding AktuellesViewModel.ZurueckCommand}">
                            <Image Source="/Images/icons8-back-48.png"/>
                        </Button>
                        <Button x:Name="VorButton" Width="35" Command="{Binding AktuellesViewModel.VorCommand}">
                            <Image Source="/Images/icons8-next-48.png"/>
                        </Button>
                        <Button x:Name="CloseButton" Width="110" Content="Schliessen"  Command="{Binding CloseCommand}" Visibility="{Binding CloseButtonVisibility}"/>
                    </StackPanel>
                </Border>

                <!--Überschrift-->
                <DockPanel DockPanel.Dock="Top">
                    <Image Source="{Binding WindowHeaderImage}"
                   Style="{StaticResource WindowImageCaption}" />
                    <TextBlock Text="{Binding WindowTitleText}"
                       Style="{StaticResource WindowCaption}" />
                </DockPanel>

                <!--Liste und Detailfeld-->
                <ContentControl Content="{Binding AktuellesViewModel}" Width="Auto"/>
                
            </DockPanel>
        </Grid>
        
    </DockPanel>
</Window>
