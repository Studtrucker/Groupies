<Window x:Class="BasisUebersichtWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Groupies"
        mc:Ignorable="d"
        xmlns:convert="clr-namespace:Groupies.Converters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        Title="{Binding WindowTitleText}" Icon="{Binding WindowTitleIcon}"
        Width="1350" Height="850" 
        WindowStartupLocation="CenterScreen">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedWindowCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Window.Resources>
        <convert:InvertableBoolToVisibleConverter Inverted="True" x:Key="BooleanToVisibilityInverted"/>
        <convert:StringToLeistungsstufeConverter x:Key="StringToLeistungsstufeConverter"/>

        <!--Data Template Trainer-->
        <DataTemplate DataType="{x:Type local:TrainerViewModel}">
            <DockPanel>

                <!--Objektliste-->
                <DataGrid CanUserAddRows="False" CanUserSortColumns="True"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}" 
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">
 
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                    
                    
                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Spitzname" Binding="{Binding Spitzname}" SortMemberPath="Spitzname" Width="Auto"/>
                        <DataGridTextColumn Header="Vorname" Binding="{Binding Vorname}" SortMemberPath="Vorname" Width="Auto"/>
                        <DataGridTextColumn Header="Nachname" Binding="{Binding Nachname}" SortMemberPath="Nachname" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>

                <GridSplitter HorizontalAlignment="Center" Width="3" Background="LightGray" />

                <!-- Detailansicht-->
                <Grid  Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="190"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" Grid.Column="2"
                            HorizontalAlignment="Left" Margin="5"
                            AllowDrop="True"  
                            BorderBrush="Gray" BorderThickness="1">
                        <i:Interaction.Behaviors>
                            <local:DragDropBehavior 
                                DragOverCommand="{Binding DragOverCommand}"                             
                                DropCommand="{Binding DropCommand}" />
                        </i:Interaction.Behaviors>
                        <Grid Height="180">
                            <Rectangle Fill="Transparent"/>
                            <Image VerticalAlignment="Center" Source="/Images/icons8-trainer-96.png"  Opacity="0.3"
                                   Visibility="{Binding SelectedItem.HatFoto,Converter={StaticResource BooleanToVisibilityInverted}}"/>
                            <TextBlock TextAlignment="Center" Foreground="Black"  HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Visibility="{Binding SelectedItem.HatFoto,Converter={StaticResource BooleanToVisibilityInverted}}">
                                Bild per <LineBreak/>
                                Drag'n'Drop <LineBreak/>
                                setzen<LineBreak/>
                            </TextBlock>
                            <Image x:Name="FotoImage" Height="180" Source="{Binding SelectedItem.Foto}"/>
                        </Grid>
                    </Border>

                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Trainer ID
                            <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Spitzname
                            <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Vorname
                            <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>
                    <Label Content="Nachname" Grid.Column="1" Grid.Row="4"/>
                    <Label Content="Telefon" Grid.Column="1" Grid.Row="5"/>
                    <Label Content="e-Mail" Grid.Column="1" Grid.Row="6"/>


                    <TextBox x:Name="TrainerIDTextBox" Grid.Column="2" Grid.Row="1" IsReadOnly="True" 
                             Text="{Binding SelectedItem.TrainerID,UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />
                    
                    <TextBox x:Name="SpitznameTextBox" Grid.Column="2" Grid.Row="2"      
                             Text="{Binding SelectedItem.Spitzname, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                    
                    <TextBox Grid.Column="2" Grid.Row="3"
                             x:Name="VornameTextbox"
                             Text="{Binding SelectedItem.Vorname, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                    
                    <TextBox Grid.Column="2" Grid.Row="4"
                             x:Name="NachnameTextbox"
                             Text="{Binding SelectedItem.Nachname,  UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />
                    
                    <TextBox Grid.Column="2" Grid.Row="5"
                             x:Name="TelefonTextbox"
                             Text="{Binding SelectedItem.Telefonnummer, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />
                    
                    <TextBox Grid.Column="2" Grid.Row="6"
                             x:Name="eMailTextbox"
                             Text="{Binding SelectedItem.EMail, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />
                
                </Grid>
            </DockPanel>

        </DataTemplate>

        <!--Data Template Teilnehmer-->
        <DataTemplate DataType="{x:Type local:TeilnehmerViewModel}">
            <DockPanel>

                    <!--Objektliste-->
                    <DataGrid Grid.Row="0" CanUserAddRows="False" CanUserDeleteRows="False"
                              AutoGenerateColumns="False"
                              IsSynchronizedWithCurrentItem="True"
                              ItemsSource="{Binding ItemsView}"
                              SelectedItem="{Binding SelectedItem}"        
                              local:DataGridScrollBehavior.AutoScrollIntoView="True">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Sorting">
                                <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <DataGrid.Columns >
                            <DataGridTextColumn Header="Vorname" Binding="{Binding Vorname}" Width="Auto" SortMemberPath="Vorname"/>
                            <DataGridTextColumn Header="Nachname" Binding="{Binding Nachname}" Width="Auto" SortMemberPath="Nachname"/>
                            <DataGridTextColumn Header="Alter" Binding="{Binding Alter}" Width="Auto" SortMemberPath="Alter"/>
                            <DataGridTextColumn Header="Leistungsstand" Binding="{Binding Leistungsstand}"  SortMemberPath="Leistungsstand.Benennung"/>
                        </DataGrid.Columns>
                    </DataGrid>

                <!-- Detailansicht-->
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition x:Name="CaptionColumn" Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Info Anzahl Teilnehmer-->
                    <TextBlock Grid.Column="2" Grid.Row="0" Text="{Binding AktuelleAnzahlObjekte}" DockPanel.Dock="Top" Margin="5,0,0,20" FontWeight="DemiBold"/>
                    
                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Teilnehmer ID <Run Foreground="Red">*</Run></TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Vorname <Run Foreground="Red">*</Run></TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Nachname <Run Foreground="Red">*</Run></TextBlock>
                    </Label>
                    <Label Content="Telefon" Grid.Column="1" Grid.Row="4"/>
                    <Label Content="Geburtsdatum" Grid.Column="1" Grid.Row="5"/>
                    <Label Content="Alter" Grid.Column="1" Grid.Row="6"/>
                    <Label Grid.Column="1" Grid.Row="7" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Leistungsstand <Run Foreground="Red">*</Run></TextBlock>
                    </Label>

                    <TextBox x:Name="TeilnehmerIDTextBox" Grid.Column="2" Grid.Row="1" IsReadOnly="True" 
                             Text="{Binding SelectedItem.TeilnehmerID, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                    <TextBox x:Name="VornameTextBox" Grid.Column="2" Grid.Row="2" 
                             Text="{Binding SelectedItem.Vorname, UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=True}"/>
                    <TextBox x:Name="NachnameTextBox" Grid.Column="2" Grid.Row="3"
                             Text="{Binding SelectedItem.Nachname, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>

                    <TextBox x:Name="TelefonTextBox" Grid.Column="2" Grid.Row="4"
                             Text="{Binding SelectedItem.Telefonnummer, UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=True}"/>

                    <DatePicker x:Name="GeburtstagDatePicker"  Grid.Column="2" Grid.Row="5" Width="150" HorizontalAlignment="Left"
                                SelectedDate="{Binding SelectedItem.Geburtsdatum, UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=True}"/>
                    <TextBox Grid.Column="2" Grid.Row="6" Width="75" HorizontalAlignment="Left"
                             Text="{Binding SelectedItem.Alter,Mode=OneWay}" IsReadOnly="True"/>

                    <ComboBox Grid.Column="2" Grid.Row="7" 
                              x:Name="LeistungsstufeCombobox"
                              ItemsSource="{Binding LeistungsstufenListCollectionView}"
                              SelectedValuePath="Benennung"
                              SelectedValue="{Binding SelectedItem.Leistungsstand, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, Converter={StaticResource StringToLeistungsstufeConverter}}"/>

                </Grid>
            </DockPanel>

        </DataTemplate>
        
        <!--Data Template Gruppe-->
        <DataTemplate DataType="{x:Type local:GruppeViewModel}">
            <DockPanel>
 
                <!--Objektliste-->
                <DataGrid Grid.Column="0" CanUserAddRows="False" CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung" Width="Auto"/>
                        <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="AusgabeTeilnehmerinfo" Width="Auto"/>
                        <DataGridTextColumn Header="Leistungsstufe" Binding="{Binding Leistungsstufe}" SortMemberPath="Leistungsstufe.Benennung" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Detailansicht-->
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Labels-->
                    <Label Grid.Column="1" Grid.Row="0" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Gruppen ID
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Sortierung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Benennung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>


                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Leistungsstufe
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <!--Felder-->
                    <TextBox Grid.Column="2" Grid.Row="0" IsReadOnly="True" 
                             Text="{Binding SelectedItem.GruppenID, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             x:Name="GruppenIDTextBox" />
                    
                    <TextBox Text="{Binding SelectedItem.Sortierung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             x:Name="SortierungTextBox" Grid.Column="2" Grid.Row="1"/>

                    <TextBox Text="{Binding SelectedItem.Benennung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                             x:Name="BenennungTextBox" Grid.Column="2" Grid.Row="2" />


                    <ComboBox Grid.Column="2" Grid.Row="3" 
                              x:Name="LeistungsstufeCombobox"
                              ItemsSource="{Binding LeistungsstufenListCollectionView}"
                              SelectedValuePath="Benennung"
                              SelectedValue="{Binding SelectedItem.Leistungsstufe, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, Converter={StaticResource StringToLeistungsstufeConverter}}"/>
                </Grid>
            </DockPanel>
        </DataTemplate>

        <!--Data Template Einteilung-->
        <DataTemplate DataType="{x:Type local:EinteilungViewModel}">
            <DockPanel>
                               
                <!--Objektliste-->
                <DataGrid CanUserAddRows="False" CanUserDeleteRows="False" DockPanel.Dock="Left"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung" Width="Auto"/>
                        <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="Benennung" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Detailansicht-->
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Labels-->
                    <Label Grid.Column="1" Grid.Row="0" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Einteilung ID
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Sortierung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Benennung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                       <!--Felder-->
                    <TextBox Text="{Binding SelectedItem.EinteilungID, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Grid.Column="2" Grid.Row="0" IsReadOnly="True"/>
                    <TextBox Text="{Binding SelectedItem.Sortierung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Grid.Column="2" Grid.Row="1"/>
                    <TextBox Text="{Binding SelectedItem.Benennung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Grid.Column="2" Grid.Row="2"/>

                </Grid>
            </DockPanel>
        </DataTemplate>

        <!--Data Template Leistungsstufe-->
        <DataTemplate DataType="{x:Type local:LeistungsstufeViewModel}">
            <DockPanel>

                <!--Objektliste-->
                <DataGrid Grid.Column="0" CanUserAddRows="False" CanUserDeleteRows="False" DockPanel.Dock="Left"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung" Width="Auto"/>
                        <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="Benennung" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Detailansicht-->
                <DockPanel>

                    <!--Objektliste zur Auswahl der Fähigkeiten-->
                    <DataGrid DockPanel.Dock="Right"  CanUserAddRows="False" CanUserDeleteRows="False" 
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding AuswahlFaehigkeiten}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Sorting">
                                <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <DataGrid.Columns >
                            <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung"/>
                            <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="Benennung"/>
                        </DataGrid.Columns>
                    </DataGrid>


                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>

                        <!--Labels-->
                        <Label Grid.Column="1" Grid.Row="0" Style="{StaticResource PflichtangabeLabel}">
                            <TextBlock >Leistungsstufe ID
                        <Run Foreground="Red">*</Run>
                            </TextBlock>
                        </Label>

                        <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                            <TextBlock >Sortierung
                        <Run Foreground="Red">*</Run>
                            </TextBlock>
                        </Label>

                        <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                            <TextBlock >Benennung
                        <Run Foreground="Red">*</Run>
                            </TextBlock>
                        </Label>

                        <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                            <TextBlock>Beschreibung
                                <!--<Run Foreground="Red">*</Run>-->
                            </TextBlock>
                        </Label>

                        <Label Grid.Column="1" Grid.Row="4" Style="{StaticResource PflichtangabeLabel}">
                            <TextBlock >Fähigkeiten
                        <Run Foreground="Red">*</Run>
                            </TextBlock>
                        </Label>

                        <!--Felder-->
                        <TextBox Text="{Binding SelectedItem.LeistungsstufeID, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                 Grid.Column="2" Grid.Row="0" IsReadOnly="True"/>
                        <TextBox Text="{Binding SelectedItem.Sortierung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                 Grid.Column="2" Grid.Row="1"/>
                        <TextBox Text="{Binding SelectedItem.Benennung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                 Grid.Column="2" Grid.Row="2"/>
                        
                        <TextBox Text="{Binding SelectedItem.Beschreibung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                 Grid.Column="2" Grid.Row="3" />


                        <DataGrid  x:Name="FaehigkeitenDataGrid"
                                   AutoGenerateColumns="False" 
                                   ItemsSource="{Binding SelectedItem.Faehigkeiten,UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                                   CanUserAddRows="False" 
                                   SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                   Grid.Column="2" Grid.Row="4">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Nr" Binding="{Binding Sortierung,UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" />
                                <DataGridTextColumn Header="Fähigkeit" Binding="{Binding Benennung,UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextTrimming" Value="WordEllipsis"/>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Beschreibung" Binding="{Binding Beschreibung,UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Width="*">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextTrimming" Value="WordEllipsis"/>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>


                    </Grid>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <!--Data Template Faehigkeit-->
        <DataTemplate DataType="{x:Type local:FaehigkeitViewModel}">
            <DockPanel LastChildFill="True">

                <!--Objektliste-->
                <DataGrid DockPanel.Dock="Left"  CanUserAddRows="False" CanUserDeleteRows="False" 
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ItemsView}"
                          SelectedItem="{Binding SelectedItem}"
                          local:DataGridScrollBehavior.AutoScrollIntoView="True">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Sorting">
                            <i:InvokeCommandAction Command="{Binding DataGridSortingCommand}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Sortierung" Binding="{Binding Sortierung}" SortMemberPath="Sortierung"/>
                        <DataGridTextColumn Header="Benennung" Binding="{Binding Benennung}" SortMemberPath="Benennung"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Detailansicht-->
                <Grid >
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Style="{StaticResource RandColumnDefinition}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Labels-->
                    <Label Grid.Column="1" Grid.Row="0" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Fähigkeit ID
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>
                    <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Sortierung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="2" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock >Benennung
                    <Run Foreground="Red">*</Run>
                        </TextBlock>
                    </Label>

                    <Label Grid.Column="1" Grid.Row="3" Style="{StaticResource PflichtangabeLabel}">
                        <TextBlock>Beschreibung
                    <!--<Run Foreground="Red">*</Run>-->
                        </TextBlock>
                    </Label>

                    <!--Felder-->
                    <TextBox Text="{Binding SelectedItem.FaehigkeitID, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Grid.Column="2" Grid.Row="0" IsReadOnly="True"/>
                    <TextBox Text="{Binding SelectedItem.Sortierung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Grid.Column="2" Grid.Row="1"/>
                    <TextBox Text="{Binding SelectedItem.Benennung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Grid.Column="2" Grid.Row="2"/>
                    
                    <TextBox Text="{Binding SelectedItem.Beschreibung, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                             Grid.Column="2" Grid.Row="3" />
                    
                </Grid>
                
            </DockPanel>
        </DataTemplate>

    </Window.Resources>
    
    <DockPanel>
        <!--Menuleiste-->
        <Menu DockPanel.Dock="Top" BorderThickness="1" BorderBrush="LightSlateGray">

            <MenuItem  Header="Fenster">
                <MenuItem Header="Schliessen" Command="{Binding CloseCommand}" />
            </MenuItem>

            <MenuItem  Header="{Binding ModelMenuItemText}">
                <MenuItem Header="Neu"  Command="{Binding AktuellesViewModel.NeuCommand}">
                    <MenuItem.Icon>
                        <Image Source= "pack://application:,,,/Images/icons8-create-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Bearbeiten"  Command="{Binding AktuellesViewModel.BearbeitenCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-pencil-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Löschen"  Command="{Binding AktuellesViewModel.LoeschenCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Images/icons8-remove-48.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem  Header="Transfer">
                <MenuItem Header="Tag 1" Command="{Binding TransferToCommand}"  CommandParameter="{Binding EinteilungID}"/>
                <MenuItem Header="Mittwoch" Command="{Binding TransferToCommand}"  CommandParameter="{Binding EinteilungID}"/>
                <MenuItem Header="Donnerstag" Command="{Binding TransferToCommand}" CommandParameter="{Binding EinteilungID}"/>
            </MenuItem>
        </Menu>

        <!--Überschrift-->
        <DockPanel DockPanel.Dock="Top" Margin="10">
            <Image Source="{Binding WindowHeaderImage}" Style="{StaticResource WindowImageCaption}" />
            <TextBlock Text="{Binding UebersichtWindowHeaderText}" Style="{StaticResource WindowCaption}" />
        </DockPanel>
        
        <!--Buttons-->
        <Border DockPanel.Dock="Bottom" Margin="10">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Label x:Name="FehlerInfoLabel" Content="{Binding (Validation.ValidationAdornerSiteFor).(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Mode=Self}}" />
                <Button x:Name="ZurueckButton" Width="35" Command="{Binding AktuellesViewModel.MovePreviousCommand}" >
                    <Image Source="/Images/icons8-back-48.png"/>
                </Button>
                <Button x:Name="VorButton" Width="35" Command="{Binding AktuellesViewModel.MoveNextCommand}" >
                    <Image Source="/Images/icons8-next-48.png"/>
                </Button>
                <Button x:Name="CloseButton" Width="110" Content="Schliessen"  Command="{Binding CloseCommand}" Visibility="{Binding CloseButtonVisibility}"/>
            </StackPanel>
        </Border>

        <!--Liste und Detailfeld-->
        <ContentControl  Content="{Binding AktuellesViewModel}" Margin="20,10" />
        
    </DockPanel>
    
</Window>
